{"ast":null,"code":"/* global URL */\n\nconst fs = require('fs');\nconst path = require('path');\nconst {\n  promisify\n} = require('util');\nconst getStream = require('get-stream');\nconst {\n  contentType\n} = require('mime-types');\nconst {\n  Headers\n} = require('node-fetch');\nconst ReadableError = require('readable-error');\nconst {\n  Readable\n} = require('readable-stream');\nconst {\n  R_OK\n} = fs.constants;\nconst access = promisify(fs.access);\nconst stat = promisify(fs.stat);\nfunction decodeIRI(iri, baseDir, baseURL) {\n  // IRIs without file scheme are used directly\n  if (!iri.startsWith('file:') && !baseURL) {\n    return path.join(baseDir, iri);\n  }\n  const pathname = decodeURIComponent(new URL(iri, baseURL).pathname);\n\n  // remove the leading slash for IRIs with file scheme and relative path\n  if (!iri.startsWith('file:/') && (!baseURL || !pathname.startsWith('/'))) {\n    return './' + path.join(baseDir, '.' + pathname);\n  }\n  return pathname;\n}\nasync function silentFileSize(pathname) {\n  try {\n    return (await stat(pathname)).size;\n  } catch (err) {\n    return null;\n  }\n}\nfunction response(status, body, headers) {\n  return {\n    status: status,\n    ok: status >= 200 && status <= 299,\n    headers: new Headers(headers),\n    body: body,\n    text: async () => getStream(body),\n    json: async () => JSON.parse(await getStream(body))\n  };\n}\nfunction create() {\n  let {\n    baseDir = '',\n    baseURL\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return async function fetch(iri) {\n    let {\n      body,\n      contentTypeLookup = contentType,\n      method = 'GET'\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    method = method.toUpperCase();\n    const pathname = decodeIRI(iri, baseDir, baseURL);\n    const extension = path.extname(pathname);\n    if (method === 'GET') {\n      const size = await silentFileSize(pathname);\n      return new Promise(resolve => {\n        const stream = fs.createReadStream(pathname);\n        stream.on('error', () => {\n          resolve(response(404, new ReadableError(new Error('File not found'))));\n        });\n        stream.on('open', () => {\n          resolve(response(200, stream, {\n            'content-length': size.toString(),\n            'content-type': contentTypeLookup(extension) || contentType(extension)\n          }));\n        });\n      });\n    }\n    if (method === 'HEAD') {\n      try {\n        await access(pathname, R_OK);\n      } catch (error) {\n        return response(404, new ReadableError(new Error('File not found')));\n      }\n      const stream = new Readable();\n      stream.push(null);\n      return response(200, stream, {\n        'content-type': contentTypeLookup(extension) || contentType(extension)\n      });\n    }\n    if (method === 'PUT') {\n      if (!body) {\n        return response(406, new ReadableError(new Error('body required')));\n      }\n      return new Promise(resolve => {\n        body.pipe(fs.createWriteStream(pathname)).on('finish', () => {\n          resolve(response(201));\n        }).on('error', err => {\n          resolve(response(500, new ReadableError(err)));\n        });\n      });\n    }\n    return response(405, new ReadableError(new Error('method not allowed')));\n  };\n}\nconst fetch = create();\nfetch.Headers = Headers;\nfetch.create = create;\nmodule.exports = fetch;","map":{"version":3,"names":["fs","require","path","promisify","getStream","contentType","Headers","ReadableError","Readable","R_OK","constants","access","stat","decodeIRI","iri","baseDir","baseURL","startsWith","join","pathname","decodeURIComponent","URL","silentFileSize","size","err","response","status","body","headers","ok","text","json","JSON","parse","create","fetch","contentTypeLookup","method","toUpperCase","extension","extname","Promise","resolve","stream","createReadStream","on","Error","toString","error","push","pipe","createWriteStream","module","exports"],"sources":["/Users/vincenthenon/Documents/GITHUB/OpenClassrooms/Projet-7/kasa/node_modules/file-fetch/index.js"],"sourcesContent":["/* global URL */\n\nconst fs = require('fs')\nconst path = require('path')\nconst { promisify } = require('util')\nconst getStream = require('get-stream')\nconst { contentType } = require('mime-types')\nconst { Headers } = require('node-fetch')\nconst ReadableError = require('readable-error')\nconst { Readable } = require('readable-stream')\n\nconst { R_OK } = fs.constants\nconst access = promisify(fs.access)\nconst stat = promisify(fs.stat)\n\nfunction decodeIRI (iri, baseDir, baseURL) {\n  // IRIs without file scheme are used directly\n  if (!iri.startsWith('file:') && !baseURL) {\n    return path.join(baseDir, iri)\n  }\n\n  const pathname = decodeURIComponent(new URL(iri, baseURL).pathname)\n\n  // remove the leading slash for IRIs with file scheme and relative path\n  if (!iri.startsWith('file:/') &&\n    (!baseURL || !pathname.startsWith('/'))) {\n    return './' + (path.join(baseDir, '.' + pathname))\n  }\n\n  return pathname\n}\n\nasync function silentFileSize (pathname) {\n  try {\n    return (await stat(pathname)).size\n  } catch (err) {\n    return null\n  }\n}\n\nfunction response (status, body, headers) {\n  return {\n    status: status,\n    ok: status >= 200 && status <= 299,\n    headers: new Headers(headers),\n    body: body,\n    text: async () => getStream(body),\n    json: async () => JSON.parse(await getStream(body))\n  }\n}\n\nfunction create ({ baseDir = '', baseURL } = {}) {\n  return async function fetch (iri, { body, contentTypeLookup = contentType, method = 'GET' } = {}) {\n    method = method.toUpperCase()\n\n    const pathname = decodeIRI(iri, baseDir, baseURL)\n    const extension = path.extname(pathname)\n\n    if (method === 'GET') {\n      const size = await silentFileSize(pathname)\n\n      return new Promise((resolve) => {\n        const stream = fs.createReadStream(pathname)\n\n        stream.on('error', () => {\n          resolve(response(404, new ReadableError(new Error('File not found'))))\n        })\n\n        stream.on('open', () => {\n          resolve(response(200, stream, {\n            'content-length': size.toString(),\n            'content-type': contentTypeLookup(extension) || contentType(extension)\n          }))\n        })\n      })\n    }\n\n    if (method === 'HEAD') {\n      try {\n        await access(pathname, R_OK)\n      } catch (error) {\n        return response(404, new ReadableError(new Error('File not found')))\n      }\n\n      const stream = new Readable()\n      stream.push(null)\n\n      return response(200, stream, {\n        'content-type': contentTypeLookup(extension) || contentType(extension)\n      })\n    }\n\n    if (method === 'PUT') {\n      if (!body) {\n        return response(406, new ReadableError(new Error('body required')))\n      }\n\n      return new Promise((resolve) => {\n        body.pipe(fs.createWriteStream(pathname)).on('finish', () => {\n          resolve(response(201))\n        }).on('error', (err) => {\n          resolve(response(500, new ReadableError(err)))\n        })\n      })\n    }\n\n    return response(405, new ReadableError(new Error('method not allowed')))\n  }\n}\n\nconst fetch = create()\n\nfetch.Headers = Headers\n\nfetch.create = create\n\nmodule.exports = fetch\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}